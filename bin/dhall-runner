#!/usr/bin/env bash
set -eo pipefail

usage() {
  echo >&2 "
Usage: ${0##*/} [--dry] ([--file FILE] | [--expr DHALL_EXPRESSION] | [-- DHALL_EXPRESSION..])

Options:
  -d,--dry      Don't execute deploy only print script
  -f,--file     A Dhall file to as deploy config
  -e,--expr     A Dhall expression to evaluate as deploy config
  --            Use rest of arguments as a Dhall expression (similar to --expr)

Environment:
  ATD_PATH      Specify an alternative path to './atd' directory
"
  exit 1
}

setExpr() {
  [ ! "$expression" ] \
    || { echo >&2 "Error: Arguments --file, --expr and -- are mutually exclusive."; usage; }
  expression="$1"
}

while [ "$1" ]; do
  case "$1" in
    -f|--file) shift
      [ -f "$1" ] || { echo >&2 "Error: \"$1\" is not a file"; usage; }
      setExpr "$(realpath "$1")"
      ;;
    -e|--expr) shift
      setExpr "$1"
      ;;
    --) shift
      setExpr "$*"
      break
      ;;
    -d|--dry)
      dry=1
      ;;
    *)
      { echo >&2 "Error: \"$1\" is not a recognized argument."; usage; }
      ;;
  esac
  shift
done

[ "$expression" ] || { echo >&2 "Error: No Dhall expression or file given."; usage; }

if [[ "$ATD_PATH" && ! -e "$PWD/atd" ]]; then
  [[ -d "$ATD_PATH" ]] \
    || { echo >&2 "Error: ATD_PATH (\"$ATD_PATH\") set but isn't a directory."; usage; }
  echo >&2 "Info: No \"atd\" directory on current path, using ATD_PATH (\"$ATD_PATH\") as \"./atd\"."
  ln -sf "$ATD_PATH" ./atd
  trap "trap - EXIT; rm -f ./atd" EXIT
fi

if [ "$dry" ]; then
  echo "export DAPP_OUT=\"\${DAPP_OUT:-$DAPP_OUT}\""
  echo "export DAPP_SKIP_BUILD=yes"
  dhall text <<<"$expression"
else
  export DAPP_SKIP_BUILD=yes
  dhall text <<<"$expression" | exec bash
fi
